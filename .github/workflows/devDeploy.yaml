name: Deploy KuchiAPI to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      SCHEMA: ${{ secrets.SCHEMA }}
      PORT: ${{ secrets.PORT }}
      JWT_SECRET_RESTAURANT: ${{ secrets.JWT_SECRET_RESTAURANT }}
      JWT_PRIVATE_KEY_RESTAURANT: ${{ secrets.JWT_PRIVATE_KEY_RESTAURANT }}
      JWT_PUBLIC_KEY_RESTAURANT: ${{ secrets.JWT_PUBLIC_KEY_RESTAURANT }}

    steps:
      - name: üõéÔ∏è Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: üöÄ Deploy via SSH na VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Vari√°veis
            APP_DIR="/root/ewertonigor/kuchiapi"  # Verifique o caminho correto para o seu diret√≥rio da aplica√ß√£o

            # Verificando Docker e Docker Compose
            echo "üî® Verificando Docker e Docker Compose..."
            docker --version || (echo "Docker n√£o instalado!" && exit 1)
            docker-compose --version || (echo "Docker Compose n√£o instalado!" && exit 1)

            echo "üìÅ Verificando diret√≥rio..."
            if [ ! -d "$APP_DIR" ]; then
              echo "Criando diret√≥rio da aplica√ß√£o..."
              mkdir -p $APP_DIR
            fi

            echo "üîÑ Atualizando c√≥digo..."
            cd $APP_DIR
            git pull || git clone git@github.com:Nume-Softwares/kuche-api.git .  # Substitua com seu reposit√≥rio correto

            # Rodando o build do NestJS
            echo "üî® Instalando depend√™ncias e compilando a aplica√ß√£o NestJS..."
            npm ci  # Garantir que as depend√™ncias sejam instaladas de maneira limpa
            npm run build  # Compilando o c√≥digo TypeScript para JavaScript

            echo "üê≥ Subindo containers..."
            docker-compose down  # Parando containers antigos
            docker-compose up -d --build  # Reconstruindo e subindo os containers

            echo "‚úÖ Deploy finalizado!"

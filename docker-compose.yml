version: "3.8"

services:
  postgres:
    container_name: kuchi-db
    image: postgres 
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: kuchi-db
      PGDATA: /data/postgres
    volumes:
      - ./data/pg:/data/postgres
    restart: always  
    networks:
      - app-network  # Garantir que o PostgreSQL use a mesma rede

  nestjs-app:
    build:
      context: .  # Direcionando para o diretório atual para construir a imagem
    container_name: kuchi-backend
    ports:
      - "3333:3333"
    depends_on:
      - postgres
    environment:
      - DATABASE_HOST=postgres  # Nome do serviço do PostgreSQL no Docker
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=docker
      - DATABASE_NAME=kuchi-db
    volumes:
      - .:/app  # Mapear o código-fonte local para dentro do contêiner
    command: |
      bash -c "
      export PATH=./node_modules/.bin:$PATH;
      until nc -z -v -w30 postgres 5432; do
        echo 'Esperando PostgreSQL...';
        sleep 1;
      done;
      echo 'PostgreSQL está pronto!';
      pnpm prisma migrate deploy && pnpm run start:prod"  # Executando os comandos necessários
    restart: always
    networks:
      - app-network  # Garantir que o NestJS use a mesma rede do PostgreSQL

networks:
  app-network:
    driver: bridge  # Rede compartilhada entre o PostgreSQL e o NestJS
